model direct_message {
  id        Int      @id @default(autoincrement())
  content   String
  type      MessageType @default(TEXT)
  sender_id  String
  receiver_id String
  sender    User     @relation("sender", fields: [sender_id], references: [id])
  receiver  User     @relation("receiver", fields: [receiver_id], references: [id])
  createdAt DateTime @default(now())
}

model channel_message {
  id               Int              @id @default(autoincrement())
  content          String
  type             MessageType @default(TEXT)
  userId           String
  user             User          @relation(fields: [userId], references: [id])
  channel_id       Int
  channel          channel     @relation(fields: [channel_id], references: [id])
  createdThreadId  Int?
  createdThread    thread?     @relation(name: "CreatedThread")
  partOfThreadId   Int?
  partOfThread     thread?     @relation(name: "PartOfThread")
  createdAt        DateTime   @default(now())
}

model thread {
  id                Int               @id @default(autoincrement())
  startingMessageId Int               @unique
  startingMessage   channel_message?   @relation(name: "CreatedThread", fields: [startingMessageId], references: [id])
  messages          channel_message[] @relation(name: "PartOfThread")
}

model server {
  id            Int      @id @default(autoincrement())
  slug          String?  @unique
  description   String?
  icon          String?
  coverImage    String?
  name          String
  ownerId       String
  owner         User     @relation(fields: [ownerId], references: [id])
  members       User[]   @relation("server_members")
  channels      channel[]
}

model channel {
  id      Int      @id @default(autoincrement())
  slug    String?  @unique
  name    String
  server_id Int
  server  server   @relation(fields: [server_id], references: [id])
  messages channel_message[]
}

model server_member {
  userId   String
  serverId Int
  user     User     @relation(fields: [userId], references: [id])
  server   server   @relation(fields: [serverId], references: [id])
  @@id([userId, serverId])
}

model ChannelMember {
  userId    String
  channelId Int
  user      User    @relation(fields: [userId], references: [id])
  channel   channel @relation(fields: [channelId], references: [id])
  @@id([userId, channelId])
}

model channel_read_receipt {
  userId    String
  channelId Int
  lastRead  DateTime @default(now())
  channel   channel  @relation(fields: [channelId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@id([userId, channelId])
}
// schemas/projects.prisma
// Projects

//TODO: Rename projects to collection and comb apply changes throughout the typedefs and resolvers + fe
model projects {
  id                        String             @id @default(uuid())
  name                      String?            @unique
  abbr                      String?            @unique
  active                    Boolean            @default(false)
  icon                      String?
  slug                      String?            @unique
  sort                      Int                @default(10)
  tile                      String?
  motiff_url                String?
  article                   article[]
  notifications             notifications[]
  price_alerts              price_alerts[]
  metrics                   projects_metrics[]
  newsletters               project_newsletters[]
}

model projects_metrics {
  project_id      String   @id
  market_cap      Decimal? @db.Decimal(20, 2)
  one_day_change  Decimal? @db.Decimal(10, 2)
  one_mo_change   Decimal? @db.Decimal(10, 2)
  one_wk_change   Decimal? @db.Decimal(10, 2)
  one_year_change Decimal? @db.Decimal(10, 2)
  six_mo_change   Decimal? @db.Decimal(10, 2)
  three_mo_change Decimal? @db.Decimal(10, 2)
  total_listings  Int?
  token_count     Int?
  mint_count      Int?
  transfer_count  Int?
  unique_holders  Int?
  total_wallets   Int?
  all_time_change Decimal? @db.Decimal(10, 2)
  volume          Decimal? @db.Decimal(10, 2)
  project         projects @relation(fields: [project_id], references: [id])
}

model project_newsletters {
  id                      Int                    @id @default(autoincrement())
  project_id              String
  subscriber_id           Int
  projects                projects               @relation(fields: [project_id], references: [id])
  subscribers             newsletter_subscribers @relation(fields: [subscriber_id], references: [id])
  @@unique([project_id, subscriber_id])
}

model UserToProjects {
  userId                  String
  collectionId            String
  user                    User         @relation(fields: [userId], references: [id])
  project                 projects   @relation(fields: [collectionId], references: [id])
  valuation               Decimal?  @db.Decimal(20, 2)
  valuation_with_fees     Decimal?  @db.Decimal(20, 2)

  @@id([userId, collectionId])
}
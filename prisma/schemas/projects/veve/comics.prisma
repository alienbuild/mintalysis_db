// schemas/projects/veve/comics.prisma
// Veve Comics

model veve_comics {
  unique_cover_id             String                     @id
  name                        String                               // TODO: DELETE
  rarity                      String?
  description                 String?                    @db.Text // TODO: DELETE
  comic_series_id             String?
  drop_date                   DateTime?
  store_price                 Decimal?                   @db.Decimal(10, 2)
  publisher_id                String?                    // TODO: DELETE ?
  market_fee                  Decimal?                   @db.Decimal(10, 3)
  createdAt                   DateTime                   @default(now())
  updatedAt                   DateTime
  comic_number                Int?                       // TODO: DELETE
  drop_method                 String?
  is_free                     Boolean?                   @default(false)
  is_unlimited                Boolean?                   @default(false)
  page_count                  Int?                       // TODO: DELETE
  start_year                  Int?                       // TODO: DELETE
  total_available             Int?
  total_issued                Int?
  total_store_allocation      Int?
  image_direction             String?                    // TODO: DELETE
  image_full_resolution_url   String?                    // TODO: DELETE
  image_high_resolution_url   String?                    // TODO: DELETE
  image_low_resolution_url    String?                    // TODO: DELETE
  image_med_resolution_url    String?                    // TODO: DELETE
  image_thumbnail             String?                    // TODO: DELETE
  minimum_age                 Int?                       // TODO: DELETE
  slug                        String?                    @unique
  comic_id                    String?
  unique_holders              BigInt?
  first_public_mint           Int?
  first_public_rarity_mint    Int?
  mcp_low_ed_limit            Int?
  mcp_rarity_value            Decimal?                   @db.Decimal(10, 2)
  comic_image_url_id          String?                    @db.VarChar(50) @unique
  total_burned                Int?
  pre_imx_unique_name         Boolean?                   @default(false)
  veve_held_edition_count     Int?
  licensor_held_edition_count Int?
  mintalysis_note             String?
  translations                veve_comics_translations[]
  veve_watchlist              veve_watchlist[]
  artists                     artists[]                  @relation("artistsToveve_comics")          // TODO: DELETE
  characters                  characters[]               @relation("charactersToveve_comics")       // TODO: DELETE
  writers                     writers[]                  @relation("veve_comicsTowriters")          // TODO: DELETE
  veveTokenComics             veveTokenComic[]
  project_id                  String?
  project                     projects?                  @relation(fields: [project_id], references: [id])
  tags                        veve_comic_tags[]

  @@index([unique_cover_id], map: "unique_cover_id")
  @@index([comic_image_url_id], map: "comic_image_url_id")
  @@index([project_id], map: "veve_comics_project_id_fkey")
}

model veve_comics_translations {
  unique_cover_id        String
  name                   String?
  description            String?           @db.Text
  seo_description        String?           @db.Text
  seo_keywords           String?           @db.Text
  seo_title              String?           @db.Text
  og_title               String?           @db.Text
  og_description         String?           @db.Text
  rarity_formatted       String?
  edition_type_formatted String?
  language               Language
  comic                  veve_comics       @relation(fields: [unique_cover_id], references: [unique_cover_id])

  @@id([language, unique_cover_id])
  @@index([language])
  @@index([unique_cover_id], map: "veve_comics_translations_unique_cover_id_fkey")
}

model veve_comics_metrics {
  unique_cover_id    String            @id
  all_time_high      Decimal?          @db.Decimal(10, 2)
  all_time_low       Decimal?          @db.Decimal(10, 2)
  floor_price        Decimal?          @db.Decimal(10, 2)
  market_cap         Decimal?          @db.Decimal(10, 2)
  one_day_change     Decimal?          @db.Decimal(10, 2)
  one_mo_change      Decimal?          @db.Decimal(10, 2)
  one_wk_change      Decimal?          @db.Decimal(10, 2)
  one_year_change    Decimal?          @db.Decimal(10, 2)
  six_mo_change      Decimal?          @db.Decimal(10, 2)
  three_mo_change    Decimal?          @db.Decimal(10, 2)
  total_listings     Int?
  total_issued       Int?
  all_time_change    Decimal?          @db.Decimal(10, 2)
  volume             Decimal?          @db.Decimal(10, 2)
  circulating_supply Decimal?          @db.Decimal(10, 2)
  comic              veve_comics       @relation(fields: [unique_cover_id], references: [unique_cover_id])
}

// TODO: Tags should be to comics not veve_comics
model veve_comic_tags {
  tag_id            Int               @id @default(autoincrement())
  name              String
  unique_cover_id   String
  comic             veve_comics       @relation(fields: [unique_cover_id], references: [unique_cover_id])

  @@index([unique_cover_id], name: "idx_comic_tags")
}